#AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"subplots": "00_torch_core.ipynb",
         "show_image": "00_torch_core.ipynb",
         "show_titled_image": "00_torch_core.ipynb",
         "show_images": "00_torch_core.ipynb",
         "ArrayBase": "00_torch_core.ipynb",
         "ArrayImageBase": "00_torch_core.ipynb",
         "ArrayImage": "00_torch_core.ipynb",
         "ArrayImageBW": "00_torch_core.ipynb",
         "ArrayMask": "00_torch_core.ipynb",
         "Tensor.__array_eq__": "00_torch_core.ipynb",
         "tensor": "00_torch_core.ipynb",
         "set_seed": "00_torch_core.ipynb",
         "unsqueeze": "00_torch_core.ipynb",
         "unsqueeze_": "00_torch_core.ipynb",
         "apply": "00_torch_core.ipynb",
         "maybe_gather": "00_torch_core.ipynb",
         "to_detach": "00_torch_core.ipynb",
         "to_half": "00_torch_core.ipynb",
         "to_float": "00_torch_core.ipynb",
         "defaults.use_cuda": "00_torch_core.ipynb",
         "default_device": "00_torch_core.ipynb",
         "to_device": "00_torch_core.ipynb",
         "to_cpu": "00_torch_core.ipynb",
         "to_np": "00_torch_core.ipynb",
         "to_concat": "00_torch_core.ipynb",
         "Tensor.set_meta": "00_torch_core.ipynb",
         "Tensor.get_meta": "00_torch_core.ipynb",
         "Tensor.as_subclass": "00_torch_core.ipynb",
         "TensorBase": "00_torch_core.ipynb",
         "TensorCategory": "00_torch_core.ipynb",
         "TensorMultiCategory": "00_torch_core.ipynb",
         "TensorImageBase": "00_torch_core.ipynb",
         "TensorImage": "00_torch_core.ipynb",
         "TensorImageBW": "00_torch_core.ipynb",
         "TensorMask": "00_torch_core.ipynb",
         "L.tensored": "00_torch_core.ipynb",
         "L.stack": "00_torch_core.ipynb",
         "L.cat": "00_torch_core.ipynb",
         "concat": "00_torch_core.ipynb",
         "Chunks": "00_torch_core.ipynb",
         "one_param": "00_torch_core.ipynb",
         "item_find": "00_torch_core.ipynb",
         "find_device": "00_torch_core.ipynb",
         "find_bs": "00_torch_core.ipynb",
         "Module": "00_torch_core.ipynb",
         "get_model": "00_torch_core.ipynb",
         "one_hot": "00_torch_core.ipynb",
         "one_hot_decode": "00_torch_core.ipynb",
         "params": "00_torch_core.ipynb",
         "trainable_params": "00_torch_core.ipynb",
         "norm_types": "00_torch_core.ipynb",
         "bn_bias_params": "00_torch_core.ipynb",
         "batch_to_samples": "00_torch_core.ipynb",
         "Tensor.interp_1d": "00_torch_core.ipynb",
         "Tensor.pca": "00_torch_core.ipynb",
         "logit": "00_torch_core.ipynb",
         "num_distrib": "00_torch_core.ipynb",
         "rank_distrib": "00_torch_core.ipynb",
         "distrib_barrier": "00_torch_core.ipynb",
         "Path.save_array": "00_torch_core.ipynb",
         "Path.load_array": "00_torch_core.ipynb",
         "make_cross_image": "00_torch_core.ipynb",
         "show_image_batch": "00_torch_core.ipynb",
         "requires_grad": "00_torch_core.ipynb",
         "init_default": "00_torch_core.ipynb",
         "cond_init": "00_torch_core.ipynb",
         "apply_leaf": "00_torch_core.ipynb",
         "apply_init": "00_torch_core.ipynb",
         "set_num_threads": "00_torch_core.ipynb",
         "ProcessPoolExecutor": "00_torch_core.ipynb",
         "parallel": "00_torch_core.ipynb",
         "run_procs": "00_torch_core.ipynb",
         "parallel_gen": "00_torch_core.ipynb",
         "script_use_ctx": "00_torch_core.ipynb",
         "script_save_ctx": "00_torch_core.ipynb",
         "script_fwd": "00_torch_core.ipynb",
         "script_bwd": "00_torch_core.ipynb",
         "grad_module": "00_torch_core.ipynb"}

modules = ["core.py",
           "torch_core.py"]

git_url = "https://github.com/takotab/seq_fastai/tree/master/"

def custom_doc_links(name): return None